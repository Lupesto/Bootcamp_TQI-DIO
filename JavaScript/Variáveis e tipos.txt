camel case
someAwesomeCase

existem ainda:
snake,kebab,pascal e upper case snake case

var e let palavras reservadas
let só funciona dentro do bloco de código (local
var é global


hoisting- 
dar o valor a uma variável antes mesmo de declarar-la
https://prnt.sc/GRo0t9N8ep7X
let precisamos declarar antes, se não gera erro.

atribuição - criar variável e dar um valor para ela
redeclaração - colocar tipo da variável que já existe e dar um valor.
reatribuição -
pegar a variável e colocar outro valor dentro dela com =



--
Constantes

uso do Snake_upper_case <convenção
escopo de bloco e não faz hoisting
não pode reatribuir valores, não pode redeclarar

sempre inicializa-la com o valor, se não gera erro.

---
Regras var, let e const
https://prnt.sc/gGig61_1tQ7Q


--
TIPOS

estrutura de dados - 
antes de declarar um valor não precisamos especificar seu tipo
tipagem dinâmica, pode colocar o tipo de variável que quiser em uma variável


Tipos de dados Primitivos e não primitivos
Primitivos(não possuem métodos dentro deles) > 
Numeros, strings, boolean, null e underfined 

Compostos(não primitivos>
Objetos e arrays



--
Strings
métodos usados
.concat <- 
typeof
.length

new String ("OI") <- é um objeto, tudo dentro do index, métodos para string. <- dá para declarar assim, mesmo não fazendo assim a linguagem permite trabalhar com os métodos

acessando indice da string

java script escapes [pesquisar] <- pular linha, uso de crase para nomes em bloco.
comando para pular linha /n <- barra para a esquerda

printando aspas com escape
Strings permitem aspas duplas e simples

.split em uma string e com espaço
.includes
.stratsWith
.endsWith
.replace

Há muitos métodos [consulte a documentação]



--
Numbers


operadores básicos no console do navegador
uso de métodos do Math no JS
--
array
declarando array

let vetor = []
manipulando array com o uso: 
.pop
.push
.shift
.unshift
.includes
.every
.some


--
objetos
estrutura 

let pessoa = {
	chave: valor
}


pode pedir o retorno com
pessoa.chave ou pessoa.["chave"]
em colhetes geralmente utilizado para mandar uma variável como valor de um objeto

--
Empty, null e underfined

empty <- nenhum valor dentro (declarar variável e não colocar nada dentro)
null <- quando de proposito é sem valor 
undefined <- Se quer foi declarado


--

ATIVIDADES PRÁTICAS
Palíndromo

[consultar aula]
condição para ver se dado inputado não é uma string

uso do split para separar letras da string, reverse para inverter toda lista e join para tornar a lista uma string novamente

2 exemplos de solução para o problema


--
[Desafio array pares]


https://github.com/stebsnusch/basecamp-javascript





